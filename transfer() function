    def transfer(subNameF, objNameF, right, subNameT, objNameT, rightT): #subject from, object from, right, subject to, object to
        possible = 0
        
        for i in range(len(ACM.subjects)): #finds name of subject
            if ACM.subjects[i].name == subNameF:
                subF = ACM.subjects[i].name
                break

        for j in range(len(ACM.objects)): #finds name of object
            if ACM.objects[j].name ==  objNameF:
                objF = ACM.objects[j].name
                break

        for i in range(len(ACM.subjects)): #finds name of subject
            if ACM.subjects[i].name == subNameT:
                subT = ACM.subjects[i].name
                break

        for j in range(len(ACM.objects)): #finds name of object
            if ACM.objects[j].name ==  objNameT:
                objT = ACM.objects[j].name
                break
        
        for k in range(len(ACM.rights)): #searches for right location within rights list
            if ACM.rights[k].name == subF + objF: #if name is found
                if right in ACM.rights[k].rights and operator.contains(right, "*"): #if right does exist
                    possible = 1

        if possible == 1:
            for k in range(len(ACM.rights)):
                if ACM.rights[k].name == subT + objT: #if name is found
                    if rightT not in ACM.rights[k].rights: #if right does not already exist
                        ACM.rights[k].rights.append(rightT) #add right
                        print("rights: " +  ACM.rights[k].text + " " + str(ACM.rights[k].rights))
                        break
